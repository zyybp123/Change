apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
    }
}
greendao {
    schemaVersion 1//指定数据库schema版本号，迁移等操作会用到
    daoPackage 'cn.bpzzr.change.bean.gen'//通过gradle插件生成的数据库相关文件的包名，默认为entity所在的包名
    targetGenDir 'src/main/java'//自定义生成数据库文件的目录了，可以将生成的文件放到我们的java目录中
    //targetGenDirTest'cn.bpzzr.change.test'//：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}
android {
    compileSdkVersion 'android-P'
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "cn.bpzzr.change"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }
    //multiDex的一些相关配置，这样配置可以让你的编译速度更快
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"     //增加java堆内存大小
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        //采用动态替换字符串的方式生成不同的release.apk
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                    def timeStamp = new Date().format('yyyyMMddHH');
                    def fileName = "Tzq-${defaultConfig.versionName}" + "-" + timeStamp + ".apk";
                    output.outputFile = file("${outputFile.parent}/${fileName}")
                }
            }
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'cn.jzvd:jiaozivideoplayer:6.2.9'
    implementation 'org.greenrobot:greendao:3.2.2'
    annotationProcessor 'org.greenrobot:greendao:3.2.2'
    implementation('com.github.bumptech.glide:glide:4.5.0') {
        exclude group: 'com.android.support'
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
    implementation('com.github.bumptech.glide:okhttp3-integration:4.5.0') {
        exclude group: 'com.android.support'
    }
    implementation 'com.squareup.picasso:picasso:2.3.2'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    implementation 'com.google.android:flexbox:0.3.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation('pub.devrel:easypermissions:1.1.3') {
        exclude group: 'com.android.support'
    }
    implementation 'com.contrarywind:Android-PickerView:3.2.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    // If you want to bind to Android-specific lifecycles
    //compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    // If you want to use Android Lifecycle for providers
    //compile 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.google.dagger:dagger-android:2.14.1'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.14.1'
    implementation('com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar') {
        exclude group: 'com.android.support'
    }
    implementation 'com.alibaba:fastjson:1.1.68.android'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.jetbrains:annotations-java5:15.0'
    implementation project(':ptr-lib')
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.1.4'
    implementation files('libs/alipaySdk-20170922.jar')
    implementation project(':audiolibrary')
    implementation project(':myuilibrary')
}
repositories {
    mavenCentral()
}
